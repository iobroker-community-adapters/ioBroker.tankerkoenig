{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.0.1\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from '@iobroker/adapter-core';\nimport axios from 'axios';\n\n// Load your modules here, e.g.:\nimport { statesObj, priceObj } from './lib/object_definition';\nimport { Result } from './lib/interface/resultInterface';\n\n// timeouts\nlet requestTimeout: NodeJS.Timeout | null = null;\nlet refreshTimeout: NodeJS.Timeout | null = null;\nlet refreshStatusTimeout: NodeJS.Timeout | null = null;\n\n// Global variables here\nlet refreshStatus = false;\nconst optionNoLog = false;\nlet sync_milliseconds = 5 * 60 * 1000; // 5min\nconst fuelTypes: string[] = ['e5', 'e10', 'diesel'];\n\nclass Tankerkoenig extends utils.Adapter {\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: 'tankerkoenig',\n\t\t});\n\t\tthis.on('ready', this.onReady.bind(this));\n\t\tthis.on('stateChange', this.onStateChange.bind(this));\n\t\t//\t\tthis.on('objectChange', this.onObjectChange.bind(this));\n\t\t// this.on('message', this.onMessage.bind(this));\n\t\tthis.on('unload', this.onUnload.bind(this));\n\t}\n\n\t/**\n\t * Is called when databases are connected and adapter received configuration.\n\t */\n\tprivate async onReady(): Promise<void> {\n\t\t// Initialize your adapter here\n\n\t\tconst adapterObj: ioBroker.Object | null | undefined = await this.getForeignObjectAsync(\n\t\t\t`system.adapter.${this.namespace}`,\n\t\t);\n\n\t\tif (adapterObj) {\n\t\t\tif (adapterObj.common.mode !== 'daemon') {\n\t\t\t\tadapterObj.common.mode = 'daemon';\n\t\t\t\tawait this.setForeignObjectAsync(adapterObj._id, adapterObj);\n\t\t\t} else {\n\t\t\t\tthis.log.debug('Adapter is already running in daemon mode');\n\t\t\t}\n\t\t}\n\n\t\t// check if the sync time is a number, if not, the string is parsed to a number\n\t\tsync_milliseconds =\n\t\t\ttypeof this.config.synctime === 'number'\n\t\t\t\t? this.config.synctime * 1000 * 60\n\t\t\t\t: parseInt(this.config.synctime, 10) * 1000 * 60;\n\n\t\tif (isNaN(sync_milliseconds) || sync_milliseconds < 5 * 60 * 1000) {\n\t\t\tsync_milliseconds = 300000; //5 * 60 * 1000 is set as the minimum interval\n\t\t\tthis.log.warn(`Sync time was too short (${this.config.synctime}). New sync time is 5 min`);\n\t\t}\n\t\tthis.log.info(`Sync time set to ${this.config.synctime} minutes or ${sync_milliseconds} ms`);\n\n\t\t// add to sync_milliseconds a random number between 0 and 1000 to avoid that all adapters start at the same time\n\t\tsync_milliseconds += Math.floor(Math.random() * 100);\n\n\t\tif (this.config.apikey.length === 36) {\n\t\t\tif (this.config.station.length > 0) {\n\t\t\t\tawait this.createAllStates(this.config.station);\n\t\t\t\tawait this.requestData();\n\t\t\t} else {\n\t\t\t\tthis.writeLog(`No stations defined`, 'error');\n\t\t\t}\n\t\t} else {\n\t\t\tthis.writeLog(`Es ist keine Api Key angegeben`, 'error');\n\t\t}\n\t}\n\n\tprivate async requestData(): Promise<any> {\n\t\ttry {\n\t\t\tif (requestTimeout) clearTimeout(requestTimeout);\n\t\t\tthis.writeLog(`request start now`, 'debug');\n\t\t\tconst url = `https://creativecommons.tankerkoenig.de/json/prices.php?ids=${this.config.station\n\t\t\t\t.map((station) => station.station)\n\t\t\t\t.join(',')}&apikey=${this.config.apikey}`; // API key is included in the configuration Demo 00000000-0000-0000-0000-000000000002\n\n\t\t\tawait axios\n\t\t\t\t.get(url, {\n\t\t\t\t\theaders: { 'User-Agent': `${this.name} ${this.version}` },\n\t\t\t\t})\n\t\t\t\t.then(async (response) => {\n\t\t\t\t\tif (response.status === 200) {\n\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t`type response: ${typeof response.data} >>> ${JSON.stringify(response.data)}`,\n\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (response.data.ok) {\n\t\t\t\t\t\t\tawait this.setStateAsync('stations.json', {\n\t\t\t\t\t\t\t\tval: JSON.stringify(response.data),\n\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tawait this.writeState(response.data.prices);\n\t\t\t\t\t\t\tif (refreshStatusTimeout) clearTimeout(refreshStatusTimeout);\n\t\t\t\t\t\t\trefreshStatusTimeout = setTimeout(async () => {\n\t\t\t\t\t\t\t\tawait this.setStateAsync(`stations.adapterStatus`, {\n\t\t\t\t\t\t\t\t\tval: 'idle',\n\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}, 2_000);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(async (error) => {\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t'Read in fuel prices (targeted stations via ID) - Error: ' + error,\n\t\t\t\t\t\t'error',\n\t\t\t\t\t);\n\t\t\t\t\tawait this.setStateAsync(`stations.adapterStatus`, {\n\t\t\t\t\t\tval: 'request Error',\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tawait this.setStateAsync(`stations.lastUpdate`, { val: Date.now(), ack: true });\n\t\t\tthis.writeLog(`last update: ${new Date().toString()}`, 'debug');\n\n\t\t\t// start the timer for the next request\n\t\t\trequestTimeout = setTimeout(async () => {\n\t\t\t\tthis.writeLog(`request timeout start new request`, 'debug');\n\t\t\t\tawait this.setStateAsync(`stations.adapterStatus`, {\n\t\t\t\t\tval: 'automatic request',\n\t\t\t\t\tack: true,\n\t\t\t\t});\n\t\t\t\tawait this.requestData();\n\t\t\t}, sync_milliseconds);\n\t\t} catch (error) {\n\t\t\tthis.writeLog(`requestData error: ${error} stack: ${error.stack}`, 'error');\n\t\t}\n\t}\n\n\tprivate async writeState(prices: Result): Promise<void> {\n\t\ttry {\n\t\t\tconst station = this.config.station;\n\t\t\tconst cheapest_e5: any[] = [];\n\t\t\tconst cheapest_e10: any[] = [];\n\t\t\tconst cheapest_diesel: any[] = [];\n\n\t\t\tif (this.config.resetValues) {\n\t\t\t\tthis.writeLog(`reset all values`, 'debug');\n\t\t\t\tfor (const fuelTypesKey in fuelTypes) {\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.${fuelTypes[fuelTypesKey]}.feed`, {\n\t\t\t\t\t\tval: 0,\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.${fuelTypes[fuelTypesKey]}.short`, {\n\t\t\t\t\t\tval: '',\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.${fuelTypes[fuelTypesKey]}.3rd`, {\n\t\t\t\t\t\tval: 0,\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.${fuelTypes[fuelTypesKey]}.combined`, {\n\t\t\t\t\t\tval: '',\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.${fuelTypes[fuelTypesKey]}.name`, {\n\t\t\t\t\t\tval: '',\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.${fuelTypes[fuelTypesKey]}.status`, {\n\t\t\t\t\t\tval: '',\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.${fuelTypes[fuelTypesKey]}.station_id`, {\n\t\t\t\t\t\tval: '',\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfor (const stationKey in station) {\n\t\t\t\t\tfor (const fuelTypesKey in fuelTypes) {\n\t\t\t\t\t\tawait this.setStateAsync(`stations.${stationKey}.${fuelTypes[fuelTypesKey]}.feed`, {\n\t\t\t\t\t\t\tval: 0,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tawait this.setStateAsync(`stations.${stationKey}.${fuelTypes[fuelTypesKey]}.short`, {\n\t\t\t\t\t\t\tval: '',\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tawait this.setStateAsync(`stations.${stationKey}.${fuelTypes[fuelTypesKey]}.3rd`, {\n\t\t\t\t\t\t\tval: 0,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t`stations.${stationKey}.${fuelTypes[fuelTypesKey]}.combined`,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tval: '',\n\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait this.setStateAsync(`stations.${stationKey}.name`, {\n\t\t\t\t\t\t\tval: '',\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tawait this.setStateAsync(`stations.${stationKey}.status`, {\n\t\t\t\t\t\t\tval: '',\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tawait this.setStateAsync(`stations.${stationKey}.station_id`, {\n\t\t\t\t\t\t\tval: '',\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (station.length !== 1) {\n\t\t\t\tthis.writeLog(` find cheapest station for e5 / e10 / diesel`, 'debug');\n\t\t\t\tfor (const pricesKey in prices) {\n\t\t\t\t\tif (typeof prices[pricesKey].e5 !== 'undefined') {\n\t\t\t\t\t\t// find the cheapest e5\n\t\t\t\t\t\tif (prices[pricesKey].e5) {\n\t\t\t\t\t\t\tcheapest_e5.push({ ...prices[pricesKey], station: pricesKey });\n\t\t\t\t\t\t\t// sort by price in cheapest_e5\n\t\t\t\t\t\t\tcheapest_e5.sort((a, b) => {\n\t\t\t\t\t\t\t\treturn a.e5 - b.e5;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// find the cheapest e10\n\t\t\t\t\tif (typeof prices[pricesKey].e10 !== 'undefined') {\n\t\t\t\t\t\tif (prices[pricesKey].e10) {\n\t\t\t\t\t\t\tcheapest_e10.push({ ...prices[pricesKey], station: pricesKey });\n\t\t\t\t\t\t\t// sort by price in cheapest_e10\n\t\t\t\t\t\t\tcheapest_e10.sort((a, b) => {\n\t\t\t\t\t\t\t\treturn a.e10 - b.e10;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// find the cheapest diesel\n\t\t\t\t\tif (typeof prices[pricesKey].diesel !== 'undefined') {\n\t\t\t\t\t\tif (prices[pricesKey].diesel) {\n\t\t\t\t\t\t\tcheapest_diesel.push({ ...prices[pricesKey], station: pricesKey });\n\t\t\t\t\t\t\t// sort by price in cheapest_diesel\n\t\t\t\t\t\t\tcheapest_diesel.sort((a, b) => {\n\t\t\t\t\t\t\t\treturn a.diesel - b.diesel;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.writeLog(`only one station configured`, 'debug');\n\t\t\t\tfor (const pricesKey in prices) {\n\t\t\t\t\tcheapest_e5.push({ ...prices[pricesKey], station: pricesKey });\n\t\t\t\t\tcheapest_e10.push({ ...prices[pricesKey], station: pricesKey });\n\t\t\t\t\tcheapest_diesel.push({ ...prices[pricesKey], station: pricesKey });\n\t\t\t\t}\n\t\t\t}\n\t\t\t// write the cheapest prices to the states\n\t\t\tfor (const stationKey in station) {\n\t\t\t\tif (station[stationKey].station === cheapest_e5[0].station) {\n\t\t\t\t\tthis.writeLog(`write the cheapest e5 to the states`, 'debug');\n\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e5.feed`, {\n\t\t\t\t\t\tval: parseFloat(cheapest_e5[0].e5),\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e5.station_id`, {\n\t\t\t\t\t\tval: cheapest_e5[0].station,\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e5.name`, {\n\t\t\t\t\t\tval: station[stationKey].stationname,\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e5.status`, {\n\t\t\t\t\t\tval: cheapest_e5[0].status,\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tconst cutPrice = await this.cutPrice(cheapest_e5[0].e5);\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e5.3rd`, {\n\t\t\t\t\t\tval: cutPrice.price3rd,\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e5.short`, {\n\t\t\t\t\t\tval: cutPrice.priceshort,\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\n\t\t\t\t\tconst combined = `<span class=\"station_open\">${cutPrice.priceshort}<sup style=\"font-size: 50%\">${cutPrice.price3rd}</sup> <span class=\"station_combined_euro\">\u20AC</span></span>`;\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e5.combined`, {\n\t\t\t\t\t\tval: combined,\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`Cheapest gas station for e5: ${station[stationKey].stationname}  id: ${cheapest_e5[0].station}`,\n\t\t\t\t\t\t'debug',\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (station[stationKey].station === cheapest_e10[0].station) {\n\t\t\t\t\tthis.writeLog(`write the cheapest e10 to the states`, 'debug');\n\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e10.feed`, {\n\t\t\t\t\t\tval: parseFloat(cheapest_e10[0].e10),\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e10.station_id`, {\n\t\t\t\t\t\tval: cheapest_e10[0].station,\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e10.name`, {\n\t\t\t\t\t\tval: station[stationKey].stationname,\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e10.status`, {\n\t\t\t\t\t\tval: cheapest_e10[0].status,\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tconst cutPrice = await this.cutPrice(cheapest_e10[0].e10);\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e10.3rd`, {\n\t\t\t\t\t\tval: cutPrice.price3rd,\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e10.short`, {\n\t\t\t\t\t\tval: cutPrice.priceshort,\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\n\t\t\t\t\tconst combined = `<span class=\"station_open\">${cutPrice.priceshort}<sup style=\"font-size: 50%\">${cutPrice.price3rd}</sup> <span class=\"station_combined_euro\">\u20AC</span></span>`;\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e10.combined`, {\n\t\t\t\t\t\tval: combined,\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`Cheapest gas station for e10: ${station[stationKey].stationname}  id: ${cheapest_e10[0].station}`,\n\t\t\t\t\t\t'debug',\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (station[stationKey].station === cheapest_diesel[0].station) {\n\t\t\t\t\tthis.writeLog(`write the cheapest diesel to the states`, 'debug');\n\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.diesel.feed`, {\n\t\t\t\t\t\tval: parseFloat(cheapest_diesel[0].diesel),\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.diesel.station_id`, {\n\t\t\t\t\t\tval: cheapest_diesel[0].station,\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.diesel.name`, {\n\t\t\t\t\t\tval: station[stationKey].stationname,\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.diesel.status`, {\n\t\t\t\t\t\tval: cheapest_diesel[0].status,\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tconst cutPrice = await this.cutPrice(cheapest_diesel[0].diesel);\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.diesel.3rd`, {\n\t\t\t\t\t\tval: cutPrice.price3rd,\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.diesel.short`, {\n\t\t\t\t\t\tval: cutPrice.priceshort,\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tconst combined = `<span class=\"station_open\">${cutPrice.priceshort}<sup style=\"font-size: 50%\">${cutPrice.price3rd}</sup> <span class=\"station_combined_euro\">\u20AC</span></span>`;\n\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.diesel.combined`, {\n\t\t\t\t\t\tval: combined,\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`Cheapest gas station for diesel: ${station[stationKey].stationname}  id: ${cheapest_diesel[0].station}`,\n\t\t\t\t\t\t'debug',\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// write all available stations to state\n\t\t\tfor (const stationsKey in station) {\n\t\t\t\tfor (const pricesKey in prices) {\n\t\t\t\t\tif (station[stationsKey].station === pricesKey) {\n\t\t\t\t\t\tawait this.setStateAsync(`stations.${stationsKey}.name`, {\n\t\t\t\t\t\t\tval: station[stationsKey].stationname,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.${stationsKey}.station_id`, {\n\t\t\t\t\t\t\tval: station[stationsKey].station,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.${stationsKey}.status`, {\n\t\t\t\t\t\t\tval: prices[station[stationsKey].station].status,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (prices[station[stationsKey].station].status === 'open') {\n\t\t\t\t\t\t\tfor (const key in fuelTypes) {\n\t\t\t\t\t\t\t\tif (prices[station[stationsKey].station][fuelTypes[key]]) {\n\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t`stations.${stationsKey}.${fuelTypes[key]}.feed`,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tval: parseFloat(\n\t\t\t\t\t\t\t\t\t\t\t\tprices[station[stationsKey].station][fuelTypes[key]],\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tconst pricesObj = await this.cutPrice(\n\t\t\t\t\t\t\t\t\t\tprices[station[stationsKey].station][fuelTypes[key]],\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t`stations.${stationsKey}.${fuelTypes[key]}.3rd`,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tval: pricesObj.price3rd,\n\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t`stations.${stationsKey}.${fuelTypes[key]}.short`,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tval: pricesObj.priceshort,\n\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tconst combined = `<span class=\"station_open\">${pricesObj.priceshort}<sup style=\"font-size: 50%\">${pricesObj.price3rd}</sup> <span class=\"station_combined_euro\">\u20AC</span></span>`;\n\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t`stations.${stationsKey}.${fuelTypes[key]}.combined`,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tval: combined,\n\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t\t\t`There is no ${key} in the ${station[stationsKey].stationname} ID: ${station[stationsKey].station} station.`,\n\t\t\t\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (prices[station[stationsKey].station].status === 'closed') {\n\t\t\t\t\t\t\tfor (const key in fuelTypes) {\n\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t`stations.${stationsKey}.${fuelTypes[key]}.combined`,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tval: `<span class=\"station_closed\">Station Closed</span>`,\n\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.writeLog(`${station[stationsKey].stationname} is Closed`, `debug`);\n\t\t\t\t\t\t} else if (prices[station[stationsKey].station].status === 'no prices') {\n\t\t\t\t\t\t\tfor (const key in fuelTypes) {\n\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t`stations.${stationsKey}.${fuelTypes[key]}.combined`,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tval: `<span class=\"station_no_prices\">No Prices</span>`,\n\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t`there are no prices at ${station[stationsKey].stationname}`,\n\t\t\t\t\t\t\t\t`warn`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tprices[station[stationsKey].station].status === 'not found' ||\n\t\t\t\t\t\t\tprices[station[stationsKey].station].status === 'no stations'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tfor (const key in fuelTypes) {\n\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t`stations.${stationsKey}.${fuelTypes[key]}.combined`,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tval: `<span class=\"station_notfound\">not found</span>`,\n\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t`station ${station[stationsKey].stationname} with ID: ${station[stationsKey].station} was not found`,\n\t\t\t\t\t\t\t\t`warn`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.writeLog(`writeState error: ${error} stack: ${error.stack}`, 'error');\n\t\t}\n\t}\n\n\tprivate async cutPrice(\n\t\tprice: string | number | boolean | undefined,\n\t): Promise<{ priceshort: string; price3rd: number }> {\n\t\tthis.writeLog(`cutPrice: ${price} price type ${typeof price}`, 'debug');\n\t\tif (price === undefined) {\n\t\t\treturn { priceshort: '0', price3rd: 0 };\n\t\t}\n\t\tif (typeof price === 'string') {\n\t\t\tprice = parseFloat(price);\n\t\t}\n\t\tif (typeof price === 'boolean') {\n\t\t\tprice = 0;\n\t\t}\n\t\tthis.writeLog(`price: ${price}`, 'debug');\n\t\tlet temp = price * 100; // 100x price now with one decimal place\n\t\tconst temp2 = price * 1000; // 1000x price without decimal place\n\t\tthis.writeLog(`temp: ${temp} temp2: ${temp2}`, 'debug');\n\t\ttemp = Math.floor(temp); // Decimal place (.x) is truncated\n\t\tthis.writeLog(`[cutPrice] temp.Math.floor(temp): ${temp}`, 'debug');\n\t\ttemp = temp / 100; // two decimal places remain\n\t\tthis.writeLog(`[cutPrice] temp / 100 : ${temp}`, 'debug');\n\t\tconst price_short = temp.toFixed(2); // Output price with 2 decimal places (truncated)\n\t\tconst price_3rd_digit = temp2 % 10; // Determine third decimal place individually\n\t\tthis.writeLog(`[cutPrice] price_short: ${price_short} price_3rd_digit: ${price_3rd_digit}`, 'debug');\n\t\treturn {\n\t\t\tpriceshort: price_short, // als String wg. Nullen z.B. 1.10 statt 1.1\n\t\t\tprice3rd: price_3rd_digit,\n\t\t};\n\t}\n\n\t/**\n\t * Function to create all Folder and states for the stations\n\t */\n\tprivate async createAllStates(stations: ioBroker.Station[]): Promise<void> {\n\t\ttry {\n\t\t\tthis.writeLog('all states are now created', 'debug');\n\n\t\t\t//  create all channel\n\t\t\tawait this.setObjectNotExistsAsync('stations', {\n\t\t\t\ttype: 'channel',\n\t\t\t\tcommon: {\n\t\t\t\t\tname: 'Tankstellen',\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\n\t\t\tawait this.setObjectNotExistsAsync('stations.cheapest', {\n\t\t\t\ttype: 'channel',\n\t\t\t\tcommon: {\n\t\t\t\t\tname: 'g\u00FCnstigste Tankstellen',\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\n\t\t\t// create the cheapest folder and states\n\t\t\tfor (const fuelTypesKey in fuelTypes) {\n\t\t\t\tawait this.setObjectNotExistsAsync(`stations.cheapest.${fuelTypes[fuelTypesKey]}`, {\n\t\t\t\t\ttype: 'channel',\n\t\t\t\t\tcommon: {\n\t\t\t\t\t\tname: `g\u00FCnstigste ${fuelTypes[fuelTypesKey].toUpperCase()}`,\n\t\t\t\t\t},\n\t\t\t\t\tnative: {},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfor (const fuelTypesKey in fuelTypes) {\n\t\t\t\tfor (const statesObjKey in statesObj) {\n\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t`stations.cheapest.${fuelTypes[fuelTypesKey]}.${statesObjKey}`,\n\t\t\t\t\t\tstatesObj[statesObjKey],\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tfor (const priceObjKey in priceObj) {\n\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t`stations.cheapest.${fuelTypes[fuelTypesKey]}.${priceObjKey}`,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...priceObj[priceObjKey],\n\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t...priceObj[priceObjKey].common,\n\t\t\t\t\t\t\t\tname: `g\u00FCnstigste ${fuelTypes[fuelTypesKey]} ${priceObjKey}`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// create all other folder and states\n\t\t\tfor (const stationsKey in stations) {\n\t\t\t\tif (parseFloat(stationsKey) <= 9) {\n\t\t\t\t\tif (stations.hasOwnProperty(stationsKey)) {\n\t\t\t\t\t\tconst station: { station: string; stationname: string } = stations[stationsKey];\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`stations.${stationsKey}`, {\n\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\tname: station.stationname,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tlet objects = null;\n\t\t\t\t\t\tobjects = await this.getObjectAsync(`stations.${stationsKey}`);\n\t\t\t\t\t\tif (objects !== null && objects !== undefined) {\n\t\t\t\t\t\t\tconst { common } = objects;\n\t\t\t\t\t\t\tif (common.name !== station.stationname) {\n\t\t\t\t\t\t\t\tawait this.extendObjectAsync(`stations.${stationsKey}`, {\n\t\t\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\t\tname: station.stationname,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const fuelTypesKey in fuelTypes) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t`stations.${stationsKey}.${fuelTypes[fuelTypesKey]}`,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\t\tname: fuelTypes[fuelTypesKey].toUpperCase(),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (const statesObjKey in statesObj) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t`stations.${stationsKey}.${statesObjKey}`,\n\t\t\t\t\t\t\t\tstatesObj[statesObjKey],\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (const fuelTypesKey in fuelTypes) {\n\t\t\t\t\t\t\tfor (const priceObjKey in priceObj) {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`stations.${stationsKey}.${fuelTypes[fuelTypesKey]}.${priceObjKey}`,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t...priceObj[priceObjKey],\n\t\t\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\t\t\t...priceObj[priceObjKey].common,\n\t\t\t\t\t\t\t\t\t\t\tname: `${fuelTypes[fuelTypesKey]} ${priceObjKey}`,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait this.setObjectNotExistsAsync(`stations.json`, {\n\t\t\t\ttype: 'state',\n\t\t\t\tcommon: {\n\t\t\t\t\tname: 'tankerkoenig JSON',\n\t\t\t\t\tdesc: 'JSON return from tankerkoenig.de with all prices for all stations',\n\t\t\t\t\ttype: `string`,\n\t\t\t\t\trole: `json`,\n\t\t\t\t\tdef: '',\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: false,\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\n\t\t\tawait this.setObjectNotExistsAsync(`stations.lastUpdate`, {\n\t\t\t\ttype: 'state',\n\t\t\t\tcommon: {\n\t\t\t\t\tname: 'tankerkoenig last update',\n\t\t\t\t\tdesc: 'last update of tankerkoenig.de',\n\t\t\t\t\ttype: `number`,\n\t\t\t\t\trole: `value.time`,\n\t\t\t\t\tdef: 0,\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: false,\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\n\t\t\tawait this.setObjectNotExistsAsync(`stations.adapterStatus`, {\n\t\t\t\ttype: 'state',\n\t\t\t\tcommon: {\n\t\t\t\t\tname: 'adapter status',\n\t\t\t\t\tdesc: 'adapter status',\n\t\t\t\t\ttype: `string`,\n\t\t\t\t\trole: `info.status`,\n\t\t\t\t\tdef: 'idle',\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: false,\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\n\t\t\tawait this.setObjectNotExistsAsync(`stations.refresh`, {\n\t\t\t\ttype: 'state',\n\t\t\t\tcommon: {\n\t\t\t\t\tname: 'manuel refresh the data from tankerkoenig.de',\n\t\t\t\t\tdesc: 'refresh the data from tankerkoenig.de',\n\t\t\t\t\ttype: `boolean`,\n\t\t\t\t\trole: `button`,\n\t\t\t\t\tdef: false,\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: true,\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\t\t\tawait this.subscribeStates(`stations.refresh`);\n\n\t\t\t// end of create objects\n\t\t} catch (e) {\n\t\t\tthis.writeLog(`Error creating all states: ${e}`, 'error');\n\t\t}\n\t}\n\n\t/**\n\t * a function for log output\n\t */\n\tprivate writeLog(logtext: string, logtype: 'silly' | 'info' | 'debug' | 'warn' | 'error'): void {\n\t\ttry {\n\t\t\tif (!optionNoLog) {\n\t\t\t\t// Ausgabe bei info, debug und error\n\t\t\t\tif (logtype === 'silly') this.log.silly(logtext);\n\t\t\t\tif (logtype === 'info') this.log.info(logtext);\n\t\t\t\tif (logtype === 'debug') this.log.debug(logtext);\n\t\t\t\tif (logtype === 'warn') this.log.warn(logtext);\n\t\t\t\tif (logtype === 'error') this.log.error(logtext);\n\t\t\t} else {\n\t\t\t\t// Ausgabe nur bei error\n\t\t\t\tif (logtype === 'error') this.log.error(logtext);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.log.error(`writeLog error: ${error} , stack: ${error.stack}`);\n\t\t}\n\t}\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t */\n\tprivate async onUnload(callback: () => void): Promise<void> {\n\t\ttry {\n\t\t\t// Here you must clear all timeouts or intervals that may still be active\n\t\t\tif (requestTimeout) clearInterval(requestTimeout);\n\t\t\tif (refreshTimeout) clearInterval(refreshTimeout);\n\t\t\tif (refreshStatusTimeout) clearTimeout(refreshStatusTimeout);\n\n\t\t\tawait this.setStateAsync(`stations.adapterStatus`, {\n\t\t\t\tval: 'offline',\n\t\t\t\tack: true,\n\t\t\t});\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t/**\n\t * Is called if a subscribed state changes\n\t */\n\tprivate async onStateChange(id: string, state: ioBroker.State | null | undefined): Promise<void> {\n\t\ttry {\n\t\t\tif (state) {\n\t\t\t\tif (id === `${this.namespace}.stations.refresh`) {\n\t\t\t\t\tif (state.val && !state.ack) {\n\t\t\t\t\t\t// set refresh to timeout to 1min to prevent multiple refreshes\n\t\t\t\t\t\tif (!refreshTimeout) {\n\t\t\t\t\t\t\tthis.writeLog(`refresh timeout set to 1min`, 'info');\n\t\t\t\t\t\t\trefreshTimeout = setTimeout(async () => {\n\t\t\t\t\t\t\t\tthis.writeLog(`refresh again possible`, 'info');\n\t\t\t\t\t\t\t\trefreshTimeout = null;\n\t\t\t\t\t\t\t\trefreshStatus = false;\n\t\t\t\t\t\t\t}, 60000);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!refreshStatus) {\n\t\t\t\t\t\t\trefreshStatus = true;\n\n\t\t\t\t\t\t\tthis.writeLog('manuel refresh the data from tankerkoenig.de', 'info');\n\t\t\t\t\t\t\tawait this.setStateAsync(`stations.adapterStatus`, {\n\t\t\t\t\t\t\t\tval: 'manuel request',\n\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tawait this.requestData();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t'too short time between manual refreshes, manual request is allowed only once per min.',\n\t\t\t\t\t\t\t\t'warn',\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait this.setStateAsync(`stations.adapterStatus`, {\n\t\t\t\t\t\t\t\tval: 'request timeout 1min',\n\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (refreshStatusTimeout) clearTimeout(refreshStatusTimeout);\n\t\t\t\t\t\t\trefreshStatusTimeout = setTimeout(async () => {\n\t\t\t\t\t\t\t\tawait this.setStateAsync(`stations.adapterStatus`, {\n\t\t\t\t\t\t\t\t\tval: 'idle',\n\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}, 5000);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.writeLog(`[onStateChane ${id}] error: ${e} , stack: ${e.stack}`, 'error');\n\t\t}\n\t}\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Tankerkoenig(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new Tankerkoenig())();\n}\n"],
  "mappings": "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",
  "names": []
}
