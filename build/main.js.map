{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.0.1\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from '@iobroker/adapter-core';\nimport axios from 'axios';\nimport { CreateJsonTable } from './lib/interface/CreateJsonTable';\n\n// Load your modules here, e.g.:\nimport { statesObj, priceObj } from './lib/object_definition';\nimport { Result } from './lib/interface/resultInterface';\n\n// timeouts\nlet requestTimeout: NodeJS.Timeout | null = null;\nlet refreshTimeout: NodeJS.Timeout | null = null;\nlet refreshStatusTimeout: NodeJS.Timeout | null = null;\n\n// Global variables here\nlet refreshStatus = false;\nconst optionNoLog = false;\nlet sync_milliseconds = 5 * 60 * 1000; // 5min\nconst fuelTypes: string[] = ['e5', 'e10', 'diesel'];\n\nclass Tankerkoenig extends utils.Adapter {\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: 'tankerkoenig',\n\t\t});\n\t\tthis.on('ready', this.onReady.bind(this));\n\t\tthis.on('stateChange', this.onStateChange.bind(this));\n\t\tthis.on('unload', this.onUnload.bind(this));\n\t}\n\n\t/**\n\t * @description Is called when databases are connected and adapter received configuration.\n\t */\n\tprivate async onReady(): Promise<void> {\n\t\t// Initialize your adapter here\n\n\t\tconst adapterObj: ioBroker.Object | null | undefined = await this.getForeignObjectAsync(\n\t\t\t`system.adapter.${this.namespace}`,\n\t\t);\n\n\t\tif (adapterObj) {\n\t\t\tif (adapterObj.common.mode !== 'daemon') {\n\t\t\t\tadapterObj.common.mode = 'daemon';\n\t\t\t\tawait this.setForeignObjectAsync(adapterObj._id, adapterObj);\n\t\t\t} else {\n\t\t\t\tthis.log.debug('Adapter is already running in daemon mode');\n\t\t\t}\n\t\t}\n\n\t\t// check if the sync time is a number, if not, the string is parsed to a number\n\t\tsync_milliseconds =\n\t\t\ttypeof this.config.synctime === 'number'\n\t\t\t\t? this.config.synctime * 1000 * 60\n\t\t\t\t: parseInt(this.config.synctime, 10) * 1000 * 60;\n\n\t\tif (isNaN(sync_milliseconds) || sync_milliseconds < 5 * 60 * 1000) {\n\t\t\tsync_milliseconds = 300000; //5 * 60 * 1000 is set as the minimum interval\n\t\t\tthis.log.warn(`Sync time was too short (${this.config.synctime}). New sync time is 5 min`);\n\t\t}\n\t\tthis.log.info(`Sync time set to ${this.config.synctime} minutes or ${sync_milliseconds} ms`);\n\n\t\t// add to sync_milliseconds a random number between 0 and 1000 to avoid that all adapters start at the same time\n\t\tsync_milliseconds += Math.floor(Math.random() * 100);\n\n\t\t// check if api key is set and Station is set\n\t\tif (this.config.apikey.length === 36) {\n\t\t\tif (this.config.station.length > 0) {\n\t\t\t\tawait this.createAllStates(this.config.station);\n\t\t\t\tawait this.stationDelete(this.config.station);\n\t\t\t\tawait this.requestData();\n\t\t\t} else {\n\t\t\t\tthis.writeLog(`No stations defined`, 'error');\n\t\t\t}\n\t\t} else {\n\t\t\tthis.writeLog(`No Api Key is specified`, 'error');\n\t\t}\n\t}\n\n\t/**\n\t * @description request data from tankerkoenig\n\t */\n\tprivate async requestData(): Promise<any> {\n\t\ttry {\n\t\t\tif (requestTimeout) clearTimeout(requestTimeout);\n\t\t\tthis.writeLog(`request start now`, 'debug');\n\t\t\tconst url = `https://creativecommons.tankerkoenig.de/json/prices.php?ids=${this.config.station\n\t\t\t\t.map((station) => station.station)\n\t\t\t\t.join(',')}&apikey=${this.config.apikey}`; // API key is included in the configuration Demo 00000000-0000-0000-0000-000000000002\n\n\t\t\tawait axios\n\t\t\t\t.get(url, {\n\t\t\t\t\theaders: { 'User-Agent': `${this.name} ${this.version}` },\n\t\t\t\t})\n\t\t\t\t.then(async (response) => {\n\t\t\t\t\tif (response.status === 200) {\n\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t`type response: ${typeof response.data} >>> ${JSON.stringify(response.data)}`,\n\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (response.data.ok) {\n\t\t\t\t\t\t\tawait this.setStateAsync('stations.json', {\n\t\t\t\t\t\t\t\tval: JSON.stringify(response.data),\n\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconst price = await this.setDiscount(response.data.prices);\n\t\t\t\t\t\t\tawait this.writeState(price);\n\t\t\t\t\t\t\tif (refreshStatusTimeout) clearTimeout(refreshStatusTimeout);\n\t\t\t\t\t\t\trefreshStatusTimeout = setTimeout(async () => {\n\t\t\t\t\t\t\t\tawait this.setStateAsync(`stations.adapterStatus`, {\n\t\t\t\t\t\t\t\t\tval: 'idle',\n\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}, 2_000);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(async (error) => {\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t'Read in fuel prices (targeted stations via ID) - Error: ' + error,\n\t\t\t\t\t\t'error',\n\t\t\t\t\t);\n\t\t\t\t\tawait this.setStateAsync(`stations.adapterStatus`, {\n\t\t\t\t\t\tval: 'request Error',\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tawait this.setStateAsync(`stations.lastUpdate`, { val: Date.now(), ack: true });\n\t\t\tthis.writeLog(`last update: ${new Date().toString()}`, 'debug');\n\n\t\t\t// start the timer for the next request\n\t\t\trequestTimeout = setTimeout(async () => {\n\t\t\t\tthis.writeLog(`request timeout start new request`, 'debug');\n\t\t\t\tawait this.setStateAsync(`stations.adapterStatus`, {\n\t\t\t\t\tval: 'automatic request',\n\t\t\t\t\tack: true,\n\t\t\t\t});\n\t\t\t\tawait this.requestData();\n\t\t\t}, sync_milliseconds);\n\t\t} catch (error) {\n\t\t\tthis.writeLog(`requestData error: ${error} stack: ${error.stack}`, 'error');\n\t\t}\n\t}\n\n\t/**\n\t * @description set the discount to the price if it is configured\n\t */\n\tprivate async setDiscount(price: Result): Promise<Result> {\n\t\ttry {\n\t\t\tconst station = this.config.station;\n\t\t\tfor (const stationValue of station) {\n\t\t\t\tfor (const [stationID, pricesValue] of Object.entries(price)) {\n\t\t\t\t\tif (stationID === stationValue.station) {\n\t\t\t\t\t\tif (stationValue.discounted) {\n\t\t\t\t\t\t\tstationValue.discountObj.fuelType.map(async (fuelType) => {\n\t\t\t\t\t\t\t\tfor (const [key, priceValue] of Object.entries(pricesValue)) {\n\t\t\t\t\t\t\t\t\tif (fuelType === key) {\n\t\t\t\t\t\t\t\t\t\tif (stationValue.discountObj.discountType === 'absolute') {\n\t\t\t\t\t\t\t\t\t\t\tpricesValue[fuelType] = await this.addDiscount(\n\t\t\t\t\t\t\t\t\t\t\t\tpriceValue,\n\t\t\t\t\t\t\t\t\t\t\t\tstationValue.discountObj.discount,\n\t\t\t\t\t\t\t\t\t\t\t\tstationValue.discountObj.discountType,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t} else if (stationValue.discountObj.discountType === 'percent') {\n\t\t\t\t\t\t\t\t\t\t\tpricesValue[fuelType] = await this.addDiscount(\n\t\t\t\t\t\t\t\t\t\t\t\tpriceValue,\n\t\t\t\t\t\t\t\t\t\t\t\tstationValue.discountObj.discount,\n\t\t\t\t\t\t\t\t\t\t\t\tstationValue.discountObj.discountType,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// return the prices with the discount\n\t\t\treturn price;\n\t\t} catch (error) {\n\t\t\tthis.writeLog(`setDiscount error: ${error} stack: ${error.stack}`, 'error');\n\t\t\treturn price;\n\t\t}\n\t}\n\n\t/**\n\t * @description request old state\n\t */\n\tprivate async oldState(id: string): Promise<any> {\n\t\ttry {\n\t\t\tconst oldState = await this.getStateAsync(id);\n\t\t\treturn oldState ? oldState.val : null;\n\t\t} catch (error) {\n\t\t\tthis.writeLog(`[ oldState ] error: ${error} stack: ${error.stack}`, 'error');\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * @description write the states to the adapter\n\t */\n\tprivate async writeState(prices: Result): Promise<void> {\n\t\ttry {\n\t\t\tconst station = this.config.station;\n\t\t\tconst cheapest_e5: any[] = [];\n\t\t\tconst cheapest_e10: any[] = [];\n\t\t\tconst cheapest_diesel: any[] = [];\n\n\t\t\tawait this.setStateAsync(`stations.adapterStatus`, {\n\t\t\t\tval: 'write states',\n\t\t\t\tack: true,\n\t\t\t});\n\n\t\t\tif (station.length !== 1) {\n\t\t\t\tthis.writeLog(` find cheapest station for e5 / e10 / diesel`, 'debug');\n\n\t\t\t\tfor (const [stationID, pricesValue] of Object.entries(prices)) {\n\t\t\t\t\tif (pricesValue.status === 'open') {\n\t\t\t\t\t\tif (typeof pricesValue.e5 !== 'undefined') {\n\t\t\t\t\t\t\t// find the cheapest e5\n\t\t\t\t\t\t\tif (pricesValue.e5) {\n\t\t\t\t\t\t\t\tcheapest_e5.push({ ...pricesValue, station: stationID });\n\t\t\t\t\t\t\t\t// sort by price in cheapest_e5\n\t\t\t\t\t\t\t\tcheapest_e5.sort((a, b) => {\n\t\t\t\t\t\t\t\t\treturn a.e5 - b.e5;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the cheapest e10\n\t\t\t\t\t\tif (typeof pricesValue.e10 !== 'undefined') {\n\t\t\t\t\t\t\tif (pricesValue.e10) {\n\t\t\t\t\t\t\t\tcheapest_e10.push({ ...pricesValue, station: stationID });\n\t\t\t\t\t\t\t\t// sort by price in cheapest_e10\n\t\t\t\t\t\t\t\tcheapest_e10.sort((a, b) => {\n\t\t\t\t\t\t\t\t\treturn a.e10 - b.e10;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the cheapest diesel\n\t\t\t\t\t\tif (typeof pricesValue.diesel !== 'undefined') {\n\t\t\t\t\t\t\tif (pricesValue.diesel) {\n\t\t\t\t\t\t\t\tcheapest_diesel.push({ ...pricesValue, station: stationID });\n\t\t\t\t\t\t\t\t// sort by price in cheapest_diesel\n\t\t\t\t\t\t\t\tcheapest_diesel.sort((a, b) => {\n\t\t\t\t\t\t\t\t\treturn a.diesel - b.diesel;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.writeLog(` station ${stationID} is closed`, 'debug');\n\t\t\t\t\t\tif (typeof pricesValue.status !== 'undefined') {\n\t\t\t\t\t\t\tcheapest_e5.push({ ...pricesValue, station: stationID });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (typeof pricesValue.status !== 'undefined') {\n\t\t\t\t\t\t\tcheapest_e10.push({ ...pricesValue, station: stationID });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (typeof pricesValue.status !== 'undefined') {\n\t\t\t\t\t\t\tcheapest_diesel.push({ ...pricesValue, station: stationID });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.writeLog(`only one station configured`, 'debug');\n\t\t\t\tfor (const [stationID, pricesValue] of Object.entries(prices)) {\n\t\t\t\t\tif (pricesValue.status === 'open') {\n\t\t\t\t\t\tcheapest_e5.push({ ...pricesValue, station: stationID });\n\t\t\t\t\t\tcheapest_e10.push({ ...pricesValue, station: stationID });\n\t\t\t\t\t\tcheapest_diesel.push({ ...pricesValue, station: stationID });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.writeLog(` station ${stationID} is closed`, 'debug');\n\t\t\t\t\t\tif (typeof pricesValue.status !== 'undefined') {\n\t\t\t\t\t\t\tcheapest_e5.push({ ...pricesValue, station: stationID });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (typeof pricesValue.status !== 'undefined') {\n\t\t\t\t\t\t\tcheapest_e10.push({ ...pricesValue, station: stationID });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (typeof pricesValue.status !== 'undefined') {\n\t\t\t\t\t\t\tcheapest_diesel.push({ ...pricesValue, station: stationID });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// write all prices to the states\n\t\t\tfor (const [key, stationValue] of Object.entries(station)) {\n\t\t\t\tif (stationValue.station === cheapest_e5[0].station) {\n\t\t\t\t\tthis.writeLog(`write the cheapest e5 to the states`, 'debug');\n\t\t\t\t\tif (cheapest_e5[0].status === 'open') {\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e5.feed`, {\n\t\t\t\t\t\t\tval: parseFloat(cheapest_e5[0].e5),\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e5.station_id`, {\n\t\t\t\t\t\t\tval: cheapest_e5[0].station,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e5.name`, {\n\t\t\t\t\t\t\tval: stationValue.stationname,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e5.status`, {\n\t\t\t\t\t\t\tval: cheapest_e5[0].status,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e5.discounted`, {\n\t\t\t\t\t\t\tval: stationValue.discounted,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e5.discount`, {\n\t\t\t\t\t\t\tval: stationValue.discountObj.discount,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst cutPrice = await this.cutPrice(cheapest_e5[0].e5);\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e5.3rd`, {\n\t\t\t\t\t\t\tval: cutPrice.price3rd,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e5.short`, {\n\t\t\t\t\t\t\tval: cutPrice.priceshort,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst combined = `<span class=\"station_open\">${cutPrice.priceshort}<sup style=\"font-size: 50%\">${cutPrice.price3rd}</sup> <span class=\"station_combined_euro\">\u20AC</span></span>`;\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e5.combined`, {\n\t\t\t\t\t\t\tval: combined,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t`Cheapest gas station for e5: ${stationValue.stationname}  id: ${cheapest_e5[0].station}`,\n\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e5.feed`, {\n\t\t\t\t\t\t\tval: await this.oldState(`stations.cheapest.e5.feed`),\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\tq: 0x40,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst short = await this.oldState(`stations.cheapest.e5.short`);\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e5.short`, {\n\t\t\t\t\t\t\tval: short.toString(),\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\tq: 0x40,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e5.combined`, {\n\t\t\t\t\t\t\tval:\n\t\t\t\t\t\t\t\tprices[stationValue.station].status === 'closed'\n\t\t\t\t\t\t\t\t\t? `<span class=\"station_closed\">Station Closed</span>`\n\t\t\t\t\t\t\t\t\t: prices[stationValue.station].status === 'no prices'\n\t\t\t\t\t\t\t\t\t? `<span class=\"station_no_prices\">No Prices</span>`\n\t\t\t\t\t\t\t\t\t: prices[stationValue.station].status === 'not found' ||\n\t\t\t\t\t\t\t\t\t  prices[stationValue.station].status === 'no stations'\n\t\t\t\t\t\t\t\t\t? `<span class=\"station_not_found\">not found</span>`\n\t\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e5.status`, {\n\t\t\t\t\t\t\tval: cheapest_e5[0].status,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (stationValue.station === cheapest_e10[0].station) {\n\t\t\t\t\tthis.writeLog(`write the cheapest e10 to the states`, 'debug');\n\t\t\t\t\tif (cheapest_e10[0].status === 'open') {\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e10.feed`, {\n\t\t\t\t\t\t\tval: parseFloat(cheapest_e10[0].e10),\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e10.station_id`, {\n\t\t\t\t\t\t\tval: cheapest_e10[0].station,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e10.name`, {\n\t\t\t\t\t\t\tval: stationValue.stationname,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e10.status`, {\n\t\t\t\t\t\t\tval: cheapest_e10[0].status,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e10.discounted`, {\n\t\t\t\t\t\t\tval: stationValue.discounted,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e10.discount`, {\n\t\t\t\t\t\t\tval: stationValue.discountObj.discount,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst cutPrice = await this.cutPrice(cheapest_e10[0].e10);\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e10.3rd`, {\n\t\t\t\t\t\t\tval: cutPrice.price3rd,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e10.short`, {\n\t\t\t\t\t\t\tval: cutPrice.priceshort,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst combined = `<span class=\"station_open\">${cutPrice.priceshort}<sup style=\"font-size: 50%\">${cutPrice.price3rd}</sup> <span class=\"station_combined_euro\">\u20AC</span></span>`;\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e10.combined`, {\n\t\t\t\t\t\t\tval: combined,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t`Cheapest gas station for e10: ${stationValue.stationname}  id: ${cheapest_e10[0].station}`,\n\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e10.feed`, {\n\t\t\t\t\t\t\tval: await this.oldState(`stations.cheapest.e10.feed`),\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\tq: 0x40,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst short = await this.oldState(`stations.cheapest.e10.short`);\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e10.short`, {\n\t\t\t\t\t\t\tval: short.toString(),\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\tq: 0x40,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e10.combined`, {\n\t\t\t\t\t\t\tval:\n\t\t\t\t\t\t\t\tprices[stationValue.station].status === 'closed'\n\t\t\t\t\t\t\t\t\t? `<span class=\"station_closed\">Station Closed</span>`\n\t\t\t\t\t\t\t\t\t: prices[stationValue.station].status === 'no prices'\n\t\t\t\t\t\t\t\t\t? `<span class=\"station_no_prices\">No Prices</span>`\n\t\t\t\t\t\t\t\t\t: prices[stationValue.station].status === 'not found' ||\n\t\t\t\t\t\t\t\t\t  prices[stationValue.station].status === 'no stations'\n\t\t\t\t\t\t\t\t\t? `<span class=\"station_not_found\">not found</span>`\n\t\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.e10.status`, {\n\t\t\t\t\t\t\tval: cheapest_e10[0].status,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (stationValue.station === cheapest_diesel[0].station) {\n\t\t\t\t\tthis.writeLog(`write the cheapest diesel to the states`, 'debug');\n\t\t\t\t\tif (cheapest_diesel[0].status === 'open') {\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.diesel.feed`, {\n\t\t\t\t\t\t\tval: parseFloat(cheapest_diesel[0].diesel),\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.diesel.station_id`, {\n\t\t\t\t\t\t\tval: cheapest_diesel[0].station,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.diesel.name`, {\n\t\t\t\t\t\t\tval: stationValue.stationname,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.diesel.status`, {\n\t\t\t\t\t\t\tval: cheapest_diesel[0].status,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.diesel.discounted`, {\n\t\t\t\t\t\t\tval: stationValue.discounted,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.diesel.discount`, {\n\t\t\t\t\t\t\tval: stationValue.discountObj.discount,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst cutPrice = await this.cutPrice(cheapest_diesel[0].diesel);\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.diesel.3rd`, {\n\t\t\t\t\t\t\tval: cutPrice.price3rd,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.diesel.short`, {\n\t\t\t\t\t\t\tval: cutPrice.priceshort,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst combined = `<span class=\"station_open\">${cutPrice.priceshort}<sup style=\"font-size: 50%\">${cutPrice.price3rd}</sup> <span class=\"station_combined_euro\">\u20AC</span></span>`;\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.diesel.combined`, {\n\t\t\t\t\t\t\tval: combined,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t`Cheapest gas station for diesel: ${stationValue.stationname}  id: ${cheapest_diesel[0].station}`,\n\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.diesel.feed`, {\n\t\t\t\t\t\t\tval: await this.oldState(`stations.cheapest.diesel.feed`),\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\tq: 0x40,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst short = await this.oldState(`stations.cheapest.diesel.short`);\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.diesel.short`, {\n\t\t\t\t\t\t\tval: short.toString(),\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\tq: 0x40,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.diesel.combined`, {\n\t\t\t\t\t\t\tval:\n\t\t\t\t\t\t\t\tprices[stationValue.station].status === 'closed'\n\t\t\t\t\t\t\t\t\t? `<span class=\"station_closed\">Station Closed</span>`\n\t\t\t\t\t\t\t\t\t: prices[stationValue.station].status === 'no prices'\n\t\t\t\t\t\t\t\t\t? `<span class=\"station_no_prices\">No Prices</span>`\n\t\t\t\t\t\t\t\t\t: prices[stationValue.station].status === 'not found' ||\n\t\t\t\t\t\t\t\t\t  prices[stationValue.station].status === 'no stations'\n\t\t\t\t\t\t\t\t\t? `<span class=\"station_not_found\">not found</span>`\n\t\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.cheapest.diesel.status`, {\n\t\t\t\t\t\t\tval: cheapest_diesel[0].status,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// write all available stations to state\n\t\t\t\tfor (const [pricesKey] of Object.entries(prices)) {\n\t\t\t\t\tif (stationValue.station === pricesKey) {\n\t\t\t\t\t\tawait this.setStateAsync(`stations.${key}.name`, {\n\t\t\t\t\t\t\tval: stationValue.stationname,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.${key}.station_id`, {\n\t\t\t\t\t\t\tval: stationValue.station,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.${key}.status`, {\n\t\t\t\t\t\t\tval: prices[stationValue.station].status,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait this.setStateAsync(`stations.${key}.discounted`, {\n\t\t\t\t\t\t\tval: stationValue.discounted,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tawait this.setStateAsync(`stations.${key}.discount`, {\n\t\t\t\t\t\t\tval: stationValue.discountObj.discount,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (prices[stationValue.station].status === 'open') {\n\t\t\t\t\t\t\tfor (const fuelTypesKey in fuelTypes) {\n\t\t\t\t\t\t\t\tif (fuelTypes.hasOwnProperty(fuelTypesKey)) {\n\t\t\t\t\t\t\t\t\tif (prices[stationValue.station][fuelTypes[fuelTypesKey]]) {\n\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.feed`,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tval: parseFloat(\n\t\t\t\t\t\t\t\t\t\t\t\t\tprices[stationValue.station][fuelTypes[fuelTypesKey]],\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tconst pricesObj = await this.cutPrice(\n\t\t\t\t\t\t\t\t\t\t\tprices[stationValue.station][fuelTypes[fuelTypesKey]],\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.3rd`,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tval: pricesObj.price3rd,\n\t\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.short`,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tval: pricesObj.priceshort,\n\t\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tconst combined = `<span class=\"station_open\">${pricesObj.priceshort}<sup style=\"font-size: 50%\">${pricesObj.price3rd}</sup> <span class=\"station_combined_euro\">\u20AC</span></span>`;\n\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.combined`,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tval: combined,\n\t\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tconst short = await this.oldState(\n\t\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.short`,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.short`,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tval: short.toString(),\n\t\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\t\tq: 0x40,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.feed`,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tval: await this.oldState(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.feed`,\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\t\tq: 0x40,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.combined`,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tval: `<span class=\"station_no_prices\">No Prices</span>`,\n\t\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t\t\t\t`There is no ${fuelTypes[fuelTypesKey]} in the ${stationValue.stationname} ID: ${stationValue.station} station.`,\n\t\t\t\t\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (prices[stationValue.station].status === 'closed') {\n\t\t\t\t\t\t\tif (this.config.resetValues) {\n\t\t\t\t\t\t\t\tfor (const fuelTypesKey in fuelTypes) {\n\t\t\t\t\t\t\t\t\tif (fuelTypes.hasOwnProperty(fuelTypesKey)) {\n\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.feed`,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tval: 0,\n\t\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.short`,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tval: '0',\n\t\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.combined`,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tval: `<span class=\"station_closed\">Station Closed</span>`,\n\t\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfor (const fuelTypesKey in fuelTypes) {\n\t\t\t\t\t\t\t\t\tif (fuelTypes.hasOwnProperty(fuelTypesKey)) {\n\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.feed`,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tval: await this.oldState(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.feed`,\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\t\tq: 0x40,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tconst short = await this.oldState(\n\t\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.short`,\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.short`,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tval: short.toString(),\n\t\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\t\tq: 0x40,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.combined`,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tval: `<span class=\"station_closed\">Station Closed</span>`,\n\t\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (prices[stationValue.station].status === 'closed')\n\t\t\t\t\t\t\t\tthis.writeLog(`${stationValue.stationname} is Closed`, `debug`);\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tprices[stationValue.station].status === 'no prices' ||\n\t\t\t\t\t\t\tprices[stationValue.station].status === 'not found' ||\n\t\t\t\t\t\t\tprices[stationValue.station].status === 'no stations'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tfor (const fuelTypesKey in fuelTypes) {\n\t\t\t\t\t\t\t\tif (fuelTypes.hasOwnProperty(fuelTypesKey)) {\n\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.feed`,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tval: await this.oldState(\n\t\t\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.feed`,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\tq: 0x40,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tconst short = await this.oldState(\n\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.short`,\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.short`,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tval: short.toString(),\n\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\tq: 0x40,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t`stations.${key}.${fuelTypes[fuelTypesKey]}.combined`,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tval:\n\t\t\t\t\t\t\t\t\t\t\t\tprices[stationValue.station].status === 'closed'\n\t\t\t\t\t\t\t\t\t\t\t\t\t? `<span class=\"station_closed\">Station Closed</span>`\n\t\t\t\t\t\t\t\t\t\t\t\t\t: prices[stationValue.station].status === 'no prices'\n\t\t\t\t\t\t\t\t\t\t\t\t\t? `<span class=\"station_no_prices\">No Prices</span>`\n\t\t\t\t\t\t\t\t\t\t\t\t\t: prices[stationValue.station].status === 'not found' ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t  prices[stationValue.station].status === 'no stations'\n\t\t\t\t\t\t\t\t\t\t\t\t\t? `<span class=\"station_not_found\">not found</span>`\n\t\t\t\t\t\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\tq: 0,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (prices[stationValue.station].status === 'no prices')\n\t\t\t\t\t\t\t\tthis.writeLog(`there are no prices at ${stationValue.stationname}`, `warn`);\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tprices[stationValue.station].status === 'not found' ||\n\t\t\t\t\t\t\t\tprices[stationValue.station].status === 'no stations'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t\t`station ${stationValue.stationname} with ID: ${stationValue.station} was not found`,\n\t\t\t\t\t\t\t\t\t`warn`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// create a JsonTable an write in a state\n\t\t\t\tconst JsonTable = await this.createJsonTable(prices, station);\n\t\t\t\tawait this.setStateAsync(`stations.jsonTable`, {\n\t\t\t\t\tval: JSON.stringify(JsonTable),\n\t\t\t\t\tack: true,\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.writeLog(`writeState error: ${error} stack: ${error.stack}`, 'error');\n\t\t}\n\t}\n\n\t/**\n\t * @description create a JsonTable vor visualisation\n\t */\n\tprivate async createJsonTable(\n\t\tprice: Result,\n\t\tstation: ioBroker.Station[],\n\t): Promise<CreateJsonTable[] | undefined> {\n\t\ttry {\n\t\t\tconst jsonTable = [];\n\t\t\tfor (const key in station) {\n\t\t\t\tif (station.hasOwnProperty(key)) {\n\t\t\t\t\tfor (const [stationID, pricesValue] of Object.entries(price)) {\n\t\t\t\t\t\tif (station[key].station === stationID) {\n\t\t\t\t\t\t\tif (typeof pricesValue.e5 !== 'number') {\n\t\t\t\t\t\t\t\tpricesValue.e5 = await this.oldState(`stations.${key}.e5.feed`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (typeof pricesValue.e10 !== 'number') {\n\t\t\t\t\t\t\t\tpricesValue.e10 = await this.oldState(`stations.${key}.e10.feed`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (typeof pricesValue.diesel !== 'number') {\n\t\t\t\t\t\t\t\tpricesValue.diesel = await this.oldState(`stations.${key}.diesel.feed`);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (pricesValue.status !== 'open') {\n\t\t\t\t\t\t\t\tpricesValue.e5 = await this.oldState(`stations.${key}.e5.feed`);\n\t\t\t\t\t\t\t\tpricesValue.e10 = await this.oldState(`stations.${key}.e10.feed`);\n\t\t\t\t\t\t\t\tpricesValue.diesel = await this.oldState(`stations.${key}.diesel.feed`);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tjsonTable.push({\n\t\t\t\t\t\t\t\tstation: station[key].stationname,\n\t\t\t\t\t\t\t\tstatus: pricesValue.status,\n\t\t\t\t\t\t\t\te5: pricesValue.e5 as number,\n\t\t\t\t\t\t\t\te10: pricesValue.e10 as number,\n\t\t\t\t\t\t\t\tdiesel: pricesValue.diesel as number,\n\t\t\t\t\t\t\t\tdiscount: station[key].discounted\n\t\t\t\t\t\t\t\t\t? station[key].discountObj.discountType === 'percent'\n\t\t\t\t\t\t\t\t\t\t? `${station[key].discountObj.discount}%`\n\t\t\t\t\t\t\t\t\t\t: `${station[key].discountObj.discount}\u20AC`\n\t\t\t\t\t\t\t\t\t: '0',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn jsonTable;\n\t\t} catch (error) {\n\t\t\tthis.writeLog(`createJsonTable error: ${error} stack: ${error.stack}`, 'error');\n\t\t}\n\t}\n\n\t/**\n\t * @description This function is used to get the short prices and the 3rd decimal place.\n\t */\n\tprivate async cutPrice(\n\t\tprice: string | number | boolean | undefined,\n\t): Promise<{ priceshort: string; price3rd: number }> {\n\t\ttry {\n\t\t\tthis.writeLog(`cutPrice: ${price} price type ${typeof price}`, 'debug');\n\t\t\tif (price === undefined) {\n\t\t\t\treturn { priceshort: '0', price3rd: 0 };\n\t\t\t}\n\t\t\tif (typeof price === 'string') {\n\t\t\t\tprice = parseFloat(price);\n\t\t\t}\n\t\t\tif (typeof price === 'boolean') {\n\t\t\t\tprice = 0;\n\t\t\t}\n\t\t\t/** old version still leave in case something is wrong\n\t\t\t * this.writeLog(`price: ${price}`, 'debug');\n\t\t\t * let temp = price * 100; // 100x price now with one decimal place\n\t\t\t * const temp2 = price * 1000; // 1000x price without decimal place\n\t\t\t * temp = Math.floor(temp); // Decimal place (.x) is truncated\n\t\t\t * temp = temp / 100; // two decimal places remain\n\t\t\t * const price_short = temp.toFixed(2); // Output price with 2 decimal places (truncated)\n\t\t\t * const price_3rd_digit = temp2 % 10; // Determine third decimal place individually\n\t\t\t * return {\n\t\t\t * \tpriceshort: price_short, // als String wg. Nullen z.B. 1.10 statt 1.1\n\t\t\t * \tprice3rd: price_3rd_digit,\n\t\t\t * };\n\t\t\t */\n\n\t\t\t// new cutPrice version Will still be tested\n\t\t\tthis.writeLog(`price: ${price}`, 'debug');\n\t\t\tprice = price.toFixed(3);\n\t\t\tthis.writeLog(` price.toFixed(3): ${price}`, 'debug');\n\t\t\tconst priceshort = price.slice(0, price.length - 1);\n\t\t\tthis.writeLog(` priceshort: ${priceshort}`, 'debug');\n\t\t\tconst price3rd = parseInt(price.slice(-1));\n\t\t\tthis.writeLog(` price3rd: ${price3rd}`, 'debug');\n\n\t\t\treturn {\n\t\t\t\tpriceshort,\n\t\t\t\tprice3rd,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthis.writeLog(`cutPrice error: ${error} stack: ${error.stack}`, 'error');\n\t\t\treturn { priceshort: '0', price3rd: 0 };\n\t\t}\n\t}\n\n\t/**\n\t * @description add Discount to price if discount is active\n\t */\n\tprivate async addDiscount(\n\t\tprice: string | number | boolean | undefined,\n\t\tdiscount: number,\n\t\tdiscountType: 'absolute' | 'percent',\n\t): Promise<number> {\n\t\ttry {\n\t\t\t// check if price in number format\n\t\t\tif (price === undefined) {\n\t\t\t\tprice = 0;\n\t\t\t}\n\t\t\tif (typeof price === 'string') {\n\t\t\t\tprice = parseFloat(price);\n\t\t\t}\n\t\t\tif (typeof price === 'boolean') {\n\t\t\t\tprice = 0;\n\t\t\t}\n\n\t\t\tif (discountType === 'percent') {\n\t\t\t\tthis.writeLog(`discount in percent: ${discount}`, 'debug');\n\t\t\t\tconst newPrice = (price * discount) / 100;\n\t\t\t\tthis.writeLog(\n\t\t\t\t\t`return Price with discount ${price - parseFloat(newPrice.toFixed(2))}`,\n\t\t\t\t\t'debug',\n\t\t\t\t);\n\t\t\t\treturn price - parseFloat(newPrice.toFixed(2));\n\t\t\t} else if (discountType === 'absolute') {\n\t\t\t\tthis.writeLog(`discount in absolute: ${discount}`, 'debug');\n\t\t\t\tthis.writeLog(`return Price with discount ${price - discount}`, 'debug');\n\n\t\t\t\t// return price with 3 decimal places as number\n\t\t\t\treturn parseFloat(parseFloat(String(price - discount)).toFixed(3));\n\t\t\t}\n\t\t\treturn price;\n\t\t} catch (error) {\n\t\t\tthis.writeLog(`addDiscount error: ${error} stack: ${error.stack}`, 'error');\n\t\t\treturn parseFloat(<string>price);\n\t\t}\n\t}\n\n\t/**\n\t * @description Function to create all Folder and states for the stations\n\t */\n\tprivate async createAllStates(stations: ioBroker.Station[]): Promise<void> {\n\t\ttry {\n\t\t\tthis.writeLog('all states are now created', 'debug');\n\n\t\t\t//  create all channel\n\t\t\tawait this.setObjectNotExistsAsync('stations.cheapest', {\n\t\t\t\ttype: 'channel',\n\t\t\t\tcommon: {\n\t\t\t\t\tname: 'Cheapests gas stations',\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\n\t\t\t// create the cheapest folder and states\n\t\t\tfor (const fuelTypesKey in fuelTypes) {\n\t\t\t\tif (fuelTypes.hasOwnProperty(fuelTypesKey)) {\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`stations.cheapest.${fuelTypes[fuelTypesKey]}`, {\n\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\tname: `cheapest ${fuelTypes[fuelTypesKey].toUpperCase()}`,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnative: {},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const statesObjKey in statesObj) {\n\t\t\t\tif (statesObj.hasOwnProperty(statesObjKey)) {\n\t\t\t\t\tfor (const fuelTypesKey in fuelTypes) {\n\t\t\t\t\t\tif (fuelTypes.hasOwnProperty(fuelTypesKey)) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t`stations.cheapest.${fuelTypes[fuelTypesKey]}.${statesObjKey}`,\n\t\t\t\t\t\t\t\tstatesObj[statesObjKey],\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tfor (const priceObjKey in priceObj) {\n\t\t\t\t\t\t\t\tif (priceObj.hasOwnProperty(priceObjKey)) {\n\t\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t\t`stations.cheapest.${fuelTypes[fuelTypesKey]}.${priceObjKey}`,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t...priceObj[priceObjKey],\n\t\t\t\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\t\t\t\t...priceObj[priceObjKey].common,\n\t\t\t\t\t\t\t\t\t\t\t\tname: `cheapest ${fuelTypes[fuelTypesKey]} ${priceObjKey}`,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// create all other folder and states\n\t\t\tfor (const stationKey in stations) {\n\t\t\t\tif (parseFloat(stationKey) <= 9) {\n\t\t\t\t\tif (stations.hasOwnProperty(stationKey)) {\n\t\t\t\t\t\tconst station: { station: string; stationname: string } = stations[stationKey];\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`stations.${stationKey}`, {\n\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\tname:\n\t\t\t\t\t\t\t\t\tstation.stationname !== ''\n\t\t\t\t\t\t\t\t\t\t? station.stationname\n\t\t\t\t\t\t\t\t\t\t: `station ${stationKey}`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tlet objects = null;\n\t\t\t\t\t\tobjects = await this.getObjectAsync(`stations.${stationKey}`);\n\t\t\t\t\t\tif (objects !== null && objects !== undefined) {\n\t\t\t\t\t\t\tconst { common } = objects;\n\t\t\t\t\t\t\tif (common.name !== station.stationname) {\n\t\t\t\t\t\t\t\tawait this.extendObjectAsync(`stations.${stationKey}`, {\n\t\t\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\t\tname:\n\t\t\t\t\t\t\t\t\t\t\tstation.stationname !== ''\n\t\t\t\t\t\t\t\t\t\t\t\t? station.stationname\n\t\t\t\t\t\t\t\t\t\t\t\t: `station ${stationKey}`,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (const fuelTypesKey in fuelTypes) {\n\t\t\t\t\t\t\tif (fuelTypes.hasOwnProperty(fuelTypesKey)) {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`stations.${stationKey}.${fuelTypes[fuelTypesKey]}`,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\t\t\tname: fuelTypes[fuelTypesKey].toUpperCase(),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (const statesObjKey in statesObj) {\n\t\t\t\t\t\t\tif (statesObj.hasOwnProperty(statesObjKey)) {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`stations.${stationKey}.${statesObjKey}`,\n\t\t\t\t\t\t\t\t\tstatesObj[statesObjKey],\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (const fuelTypesKey in fuelTypes) {\n\t\t\t\t\t\t\tfor (const priceObjKey in priceObj) {\n\t\t\t\t\t\t\t\tif (priceObj.hasOwnProperty(priceObjKey)) {\n\t\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t\t`stations.${stationKey}.${fuelTypes[fuelTypesKey]}.${priceObjKey}`,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t...priceObj[priceObjKey],\n\t\t\t\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\t\t\t\t...priceObj[priceObjKey].common,\n\t\t\t\t\t\t\t\t\t\t\t\tname: `${fuelTypes[fuelTypesKey]} ${priceObjKey}`,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait this.setObjectNotExistsAsync(`stations.json`, {\n\t\t\t\ttype: 'state',\n\t\t\t\tcommon: {\n\t\t\t\t\tname: 'tankerkoenig JSON',\n\t\t\t\t\tdesc: 'JSON return from tankerkoenig.de with all prices for all stations',\n\t\t\t\t\ttype: `string`,\n\t\t\t\t\trole: `json`,\n\t\t\t\t\tdef: '',\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: false,\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\n\t\t\tawait this.setObjectNotExistsAsync(`stations.jsonTable`, {\n\t\t\t\ttype: 'state',\n\t\t\t\tcommon: {\n\t\t\t\t\tname: 'JSON Table vor Visualization',\n\t\t\t\t\tdesc: 'JsonTable vor vis with all prices for all stations',\n\t\t\t\t\ttype: `string`,\n\t\t\t\t\trole: `json`,\n\t\t\t\t\tdef: '',\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: false,\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\n\t\t\tawait this.setObjectNotExistsAsync(`stations.lastUpdate`, {\n\t\t\t\ttype: 'state',\n\t\t\t\tcommon: {\n\t\t\t\t\tname: 'tankerkoenig last update',\n\t\t\t\t\tdesc: 'last update of tankerkoenig.de',\n\t\t\t\t\ttype: `number`,\n\t\t\t\t\trole: `value.time`,\n\t\t\t\t\tdef: 0,\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: false,\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\n\t\t\tawait this.setObjectNotExistsAsync(`stations.refresh`, {\n\t\t\t\ttype: 'state',\n\t\t\t\tcommon: {\n\t\t\t\t\tname: 'manuel refresh the data from tankerkoenig.de',\n\t\t\t\t\tdesc: 'refresh the data from tankerkoenig.de',\n\t\t\t\t\ttype: `boolean`,\n\t\t\t\t\trole: `button`,\n\t\t\t\t\tdef: false,\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: true,\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\t\t\tawait this.subscribeStates(`stations.refresh`);\n\n\t\t\t// end of create objects\n\t\t} catch (e) {\n\t\t\tthis.writeLog(`Error creating all states: ${e}`, 'error');\n\t\t}\n\t}\n\n\t/**\n\t * @description Is called when station deleted\n\t */\n\tprivate async stationDelete(station: ioBroker.Station[]): Promise<void> {\n\t\ttry {\n\t\t\tconst stationCount: any[] = [];\n\t\t\tif (station !== undefined) {\n\t\t\t\tfor (const indexStation in station) {\n\t\t\t\t\tstationCount.push(indexStation);\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < 10; i++) {\n\t\t\t\t\tif (stationCount[i] === undefined) {\n\t\t\t\t\t\tthis.writeLog(`delete station ${i}`, 'debug');\n\t\t\t\t\t\tawait this.delObjectAsync(`${this.namespace}.stations.${i}`, { recursive: true });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.writeLog(`[ stationDelete ] No stations defined`, 'debug');\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.writeLog(`[ stationDelete ] error: ${error} stack: ${error.stack}`, 'error');\n\t\t}\n\t}\n\n\t/**\n\t * @description a function for log output\n\t */\n\tprivate writeLog(logtext: string, logtype: 'silly' | 'info' | 'debug' | 'warn' | 'error'): void {\n\t\ttry {\n\t\t\tif (!optionNoLog) {\n\t\t\t\t// Ausgabe bei info, debug und error\n\t\t\t\tif (logtype === 'silly') this.log.silly(logtext);\n\t\t\t\tif (logtype === 'info') this.log.info(logtext);\n\t\t\t\tif (logtype === 'debug') this.log.debug(logtext);\n\t\t\t\tif (logtype === 'warn') this.log.warn(logtext);\n\t\t\t\tif (logtype === 'error') this.log.error(logtext);\n\t\t\t} else {\n\t\t\t\t// Ausgabe nur bei error\n\t\t\t\tif (logtype === 'error') this.log.error(logtext);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.log.error(`writeLog error: ${error} , stack: ${error.stack}`);\n\t\t}\n\t}\n\n\t/**\n\t * @description Is called when adapter shuts down - callback has to be called under any circumstances!\n\t */\n\tprivate async onUnload(callback: () => void): Promise<void> {\n\t\ttry {\n\t\t\t// Here you must clear all timeouts or intervals that may still be active\n\t\t\tif (requestTimeout) clearInterval(requestTimeout);\n\t\t\tif (refreshTimeout) clearInterval(refreshTimeout);\n\t\t\tif (refreshStatusTimeout) clearTimeout(refreshStatusTimeout);\n\n\t\t\tawait this.setStateAsync(`stations.adapterStatus`, {\n\t\t\t\tval: 'offline',\n\t\t\t\tack: true,\n\t\t\t});\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t/**\n\t * @description Is called if a subscribed state changes\n\t */\n\tprivate async onStateChange(id: string, state: ioBroker.State | null | undefined): Promise<void> {\n\t\ttry {\n\t\t\tif (state) {\n\t\t\t\tif (id === `${this.namespace}.stations.refresh`) {\n\t\t\t\t\tif (state.val && !state.ack) {\n\t\t\t\t\t\t// set refresh to timeout to 1min to prevent multiple refreshes\n\t\t\t\t\t\tif (!refreshTimeout) {\n\t\t\t\t\t\t\tthis.writeLog(`refresh timeout set to 1min`, 'info');\n\t\t\t\t\t\t\trefreshTimeout = setTimeout(async () => {\n\t\t\t\t\t\t\t\tthis.writeLog(`refresh again possible`, 'info');\n\t\t\t\t\t\t\t\trefreshTimeout = null;\n\t\t\t\t\t\t\t\trefreshStatus = false;\n\t\t\t\t\t\t\t}, 60000);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!refreshStatus) {\n\t\t\t\t\t\t\trefreshStatus = true;\n\n\t\t\t\t\t\t\tthis.writeLog('manuel refresh the data from tankerkoenig.de', 'info');\n\t\t\t\t\t\t\tawait this.setStateAsync(`stations.adapterStatus`, {\n\t\t\t\t\t\t\t\tval: 'manuel request',\n\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tawait this.requestData();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t'too short time between manual refreshes, manual request is allowed only once per min.',\n\t\t\t\t\t\t\t\t'warn',\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait this.setStateAsync(`stations.adapterStatus`, {\n\t\t\t\t\t\t\t\tval: 'request timeout 1min',\n\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (refreshStatusTimeout) clearTimeout(refreshStatusTimeout);\n\t\t\t\t\t\t\trefreshStatusTimeout = setTimeout(async () => {\n\t\t\t\t\t\t\t\tawait this.setStateAsync(`stations.adapterStatus`, {\n\t\t\t\t\t\t\t\t\tval: 'idle',\n\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}, 5000);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.writeLog(`[onStateChane ${id}] error: ${e} , stack: ${e.stack}`, 'error');\n\t\t}\n\t}\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Tankerkoenig(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new Tankerkoenig())();\n}\n"],
  "mappings": "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",
  "names": ["axios"]
}
